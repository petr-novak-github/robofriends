{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Conteiners/App.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","hovno","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAiBeA,EAfF,SAACC,GACV,OACI,yBAAKC,UAAU,oDAEf,6BACI,yBAAKC,IAAI,SAASC,IAAG,mCAA8BH,EAAMI,GAApC,mBACrB,6BACI,4BAAKJ,EAAMK,MACX,2BAAIL,EAAMM,WCaXC,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpB,OACA,6BAEAA,EAAOC,KAAI,SAACC,EAAOC,GACf,OAAQ,kBAAC,EAAD,CACPC,IAAKJ,EAAOG,GAAGP,GACfA,GAAKI,EAAOG,GAAGP,GACfC,KAAQG,EAAOG,GAAGN,KAClBC,MAASE,EAAOG,GAAGL,aCGTO,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAEjC,OAEI,yBAAKd,UAAU,OACf,2BACAA,UAAY,mCACZe,KAAK,SACLC,YAAY,gBACZC,SAAYH,MCDDI,G,MATA,SAACnB,GACZ,OACA,yBAAKoB,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACtEvB,EAAMwB,YC8CIC,E,kDA1Cf,aAAe,IAAD,8BACN,gBAORC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAPpC,EAAKC,MAAQ,CACLvB,OAAQ,GACRM,YAAa,IAJf,E,gEAYO,IAAD,OACjBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEpB,OAAQ4B,S,+BAI/B,IAAD,EAEyBC,KAAKN,MAA7BvB,EAFD,EAECA,OAAQM,EAFT,EAESA,YACVwB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACpC,OAAOA,EAAMnC,KAAKoC,cAAcC,SAAS5B,EAAY2B,kBAGtD,OAAQjC,EAAOmC,OAIjB,yBAAK1C,UAAU,MACZ,wBAAIA,UAAU,MAAd,kBACA,kBAAC,EAAD,CAAWc,aAAcsB,KAAKX,iBAC9B,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAUlB,OAAQ8B,MAPlB,2C,GA5BcM,aCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b1a83e76.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5' >\r\n      \r\n        <div>\r\n            <img alt='robots' src={`https://robohash.org/petr${props.id}?size=200x200`} />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport Card from './Card'\r\n\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\nreturn(\r\n<div>\r\n{\r\nrobots.map((hovno, i) => {\r\n    return (<Card\r\n     key={robots[i].id}\r\n     id ={robots[i].id}  \r\n     name = {robots[i].name} \r\n     email = {robots[i].email}/>)\r\n})\r\n}\r\n</div>\r\n\r\n)\r\n};\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\r\nreturn (\r\n\r\n    <div className='pa2'>\r\n    <input\r\n    className = 'pa3 ba b--green bg-lightess-blue'\r\n    type='search' \r\n    placeholder='search robots'\r\n    onChange = {searchChange} />\r\n    </div>\r\n);\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n    <div style = {{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>   \r\n    {props.children}\r\n    </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList'\r\nimport SearchBox from '../Components/SearchBox'\r\nimport './App.css'\r\nimport Scroll from '../Components/Scroll'\r\n\r\n\r\n\r\nclass App extends Component {\r\nconstructor() {\r\n        super ()\r\n        this.state = {\r\n                robots: [],\r\n                searchfield: ''\r\n                     }\r\n                            }\r\n\r\nonSearchChange = (event) => {\r\n  this.setState({ searchfield: event.target.value})\r\n  }\r\n\r\ncomponentDidMount() {\r\n   fetch('https://jsonplaceholder.typicode.com/users')\r\n   .then(response => response.json())\r\n   .then(users => this.setState({ robots: users }))\r\n}\r\n\r\n\r\nrender () {\r\n\r\n   const { robots, searchfield } = this.state;\r\n   const filteredRobots = robots.filter(robot =>{\r\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n   })\r\n\r\n   return !robots.length ?\r\n    <h1>Loading</h1> :\r\n   \r\n   (\r\n <div className='tc'>\r\n    <h1 className='f1'>RoboFriendssss</h1>\r\n    <SearchBox searchChange={this.onSearchChange}/>\r\n    <Scroll>\r\n    <CardList robots={filteredRobots} />\r\n    </Scroll>\r\n </div>\r\n    );\r\n        }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons'\nimport App from './Conteiners/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}